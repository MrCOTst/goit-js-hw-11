{"mappings":"8gBAAe,SAAAA,EAAmBC,GACzB,MAAQ,yDAEGA,EAAKC,sBAAsBD,EAAKE,oHAGxBF,EAAKG,qFAGLH,EAAKI,wFAGFJ,EAAKK,4FAGJL,EAAKM,0DCVrC,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,yBAC/BC,YAAaF,SAASC,cAAc,gBACpCE,iBAAkBH,SAASC,cAAc,YACzCG,QAASJ,SAASC,cAAc,aAG5BI,EAAkB,IAAI,EAAAC,EAAAC,SAkB5B,SAASC,IACPH,EAAgBI,gBAAgBC,MAAKnB,KAqBvC,SAA4BoB,GAC1B,MAAMC,EAASD,EAAKE,KAAKC,KAAIvB,GAAQD,EAAUC,KAAOwB,KAAK,IAC3DjB,EAAKK,iBAAiBa,mBAAmB,YAAaJ,GAtBpDK,CAAmB1B,GAEU,IAAzBc,EAAgBa,MAAc3B,EAAKsB,KAAKM,QAC1CC,EAAAC,OAAOC,QAAQ,oBAAoB/B,EAAKgC,qBAGrChC,EAAKsB,KAAKM,QAAW5B,EAAKgC,UAO1BhC,EAAKsB,KAAKM,SAAU5B,EAAKgC,WAC5BH,EAAAC,OAAOG,KAAK,8DAPZJ,EAAAC,OAAOI,QACL,+EAiBR,SAASC,IACP5B,EAAKK,iBAAiBwB,UAAY,GA5CpC7B,EAAKI,YAAY0B,iBAAiB,UAElC,SAAqBC,GAKnB,GAJAA,EAAEC,iBACFJ,IACArB,EAAgB0B,MAAQF,EAAEG,cAAcC,SAASC,YAAYC,MAAMC,OAErC,KAA1B/B,EAAgB0B,MAGlB,OAFAX,EAAAC,OAAOG,KAAK,gCACZE,IAGFrB,EAAgBgC,YAChB7B,OAiDe,IAAI8B,sBAfLC,IACdA,EAAQC,SAAQC,IACd,GAAIA,EAAMC,gBAA4C,KAA1BrC,EAAgB0B,MAAc,CACxDvB,IACA,MAAQmC,OAAQC,GAAe5C,SAC5BC,cAAc,YACd4C,kBAAkBC,wBACrBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,iBAMiC,CACjDC,WAAY,UAEL/C,QAAQN,EAAKM,S","sources":["src/js/card-markup.js","src/js/02-infinite scroll.js"],"sourcesContent":["export default function photoCard(data) {\n         return  `\n        <div class=\"photo-card\">\n        <img src=\"${data.webformatURL}\" alt=\"${data.tags} \" loading=\"lazy\" />\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes: </b>${data.likes}\n          </p>\n          <p class=\"info-item\">\n            <b>Views: </b>${data.views}\n          </p>\n          <p class=\"info-item\">\n            <b>Comments: </b>${data.comments}\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads: </b>${data.downloads}\n          </p>\n        </div>\n      </div>`\n       };","import '../css/styles.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PhotoApiService from './photo-service';\nimport photoCard from './card-markup';\n\nconst refs = {\n  submit: document.querySelector('button[type=\"submit\"]'),\n  inputSearch: document.querySelector('.search-form'),\n  galleryConteiner: document.querySelector('.gallery'),\n  observe: document.querySelector('.observe'),\n};\n\nconst photoApiService = new PhotoApiService();\n\nrefs.inputSearch.addEventListener('submit', startSearch);\n\nfunction startSearch(e) {\n  e.preventDefault();\n  clearGalleryConteiner();\n  photoApiService.query = e.currentTarget.elements.searchQuery.value.trim();\n\n  if (photoApiService.query === '') {\n    Notify.info('Please enter something.');\n    clearGalleryConteiner();\n    return;\n  }\n  photoApiService.resetPage();\n  fatchCards();\n}\n\nfunction fatchCards() {\n  photoApiService.fetchArticles().then(data => {\n    appendGalleryCards(data);\n\n    if (photoApiService.page === 2 && data.hits.length) {\n      Notify.success(`Hooray! We found ${data.totalHits} images.`);\n    }\n\n    if (!data.hits.length && !data.totalHits) {\n      Notify.warning(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n       return;\n    }\n\n    if (!data.hits.length && data.totalHits) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n      return;\n    }\n  });\n}\n\nfunction appendGalleryCards(data) {\n  const markup = data.hits.map(data => photoCard(data)).join('');\n  refs.galleryConteiner.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearGalleryConteiner() {\n  refs.galleryConteiner.innerHTML = '';\n}\n\nconst onEntry = entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting && photoApiService.query !== '') {\n      fatchCards();\n      const { height: cardHeight } = document\n        .querySelector('.gallery')\n        .firstElementChild.getBoundingClientRect();\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(onEntry, {\n  rootMargin: '100px',\n});\nobserver.observe(refs.observe);\n"],"names":["$300574f52826361b$export$2e2bcd8739ae039","data","webformatURL","tags","likes","views","comments","downloads","$92308daf61ddcbf2$var$refs","submit","document","querySelector","inputSearch","galleryConteiner","observe","$92308daf61ddcbf2$var$photoApiService","$bArb2","default","$92308daf61ddcbf2$var$fatchCards","fetchArticles","then","data1","markup","hits","map","join","insertAdjacentHTML","$92308daf61ddcbf2$var$appendGalleryCards","page","length","$h6c0i","Notify","success","totalHits","info","warning","$92308daf61ddcbf2$var$clearGalleryConteiner","innerHTML","addEventListener","e","preventDefault","query","currentTarget","elements","searchQuery","value","trim","resetPage","IntersectionObserver","entries","forEach","entry","isIntersecting","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","rootMargin"],"version":3,"file":"02-infinite scroll.57613de0.js.map"}